datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique
  givenName String
  familyName String
  picture String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  projects    Project[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Project {
  id    String @id @default(cuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  messages    Message[]
}

enum MessageType {
  USER
  SYSTEM
}

model Message {
  id    String @id @default(cuid())
  contents String
  type    MessageType @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project   @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String
  fileVersion   FileVersion? @relation(fields: [fileVersionId], references: [id])
  fileVersionId String?  // Optional foreign key
}

model FileVersion {
  id    String @id @default(cuid())
  files     Json       // Store the file contents as JSON
  createdAt DateTime   @default(now())
  messages    Message[]     // Relation to messages
}